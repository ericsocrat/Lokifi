# Phase K Implementation - Docker Compose Redis Service
version: '3.8'

services:
  # Add this to your existing docker-compose.yml
  redis:
    image: redis:7-alpine
    container_name: fynix-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-fynix_redis_pass}
    networks:
      - fynix-network

  # Update your existing backend service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: fynix-backend
    restart: unless-stopped
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fynix-network

volumes:
  redis_data:

networks:
  fynix-network:
    driver: bridge