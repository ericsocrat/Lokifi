{
  "version": "2.0.0",
  "tasks": [
    // ==========================================
    // BACKEND TASKS
    // ==========================================
    {
      "label": "🚀 Start Backend Server",
      "type": "shell",
      "command": "cd backend && python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": true,
        "clear": false
      },
      "isBackground": true,
      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "🧪 Run Backend Tests",
      "type": "shell",
      "command": "cd backend && python -m pytest tests/ -v --tb=short",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "🧪 Run Backend Tests with Coverage",
      "type": "shell",
      "command": "cd backend && python -m pytest tests/ -v --cov=app --cov-report=html --cov-report=term",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "🔍 Lint Backend (Ruff)",
      "type": "shell",
      "command": "cd backend && ruff check app/ --fix",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "✨ Format Backend (Black)",
      "type": "shell",
      "command": "cd backend && black app/ tests/",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🗄️  Database: Create Migration",
      "type": "shell",
      "command": "cd backend && alembic revision --autogenerate -m \"${input:migrationMessage}\"",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🗄️  Database: Run Migrations",
      "type": "shell",
      "command": "cd backend && alembic upgrade head",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🗄️  Database: Rollback Migration",
      "type": "shell",
      "command": "cd backend && alembic downgrade -1",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },

    // ==========================================
    // FRONTEND TASKS
    // ==========================================
    {
      "label": "⚛️  Start Frontend Dev Server",
      "type": "shell",
      "command": "cd frontend && npm run dev",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": true,
        "clear": false
      },
      "isBackground": true,
      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "⚛️  Build Frontend",
      "type": "shell",
      "command": "cd frontend && npm run build",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🔍 Lint Frontend (ESLint)",
      "type": "shell",
      "command": "cd frontend && npm run lint",
      "problemMatcher": ["$eslint-stylish"],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "✨ Format Frontend (Prettier)",
      "type": "shell",
      "command": "cd frontend && npx prettier --write .",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🧪 Run Frontend Tests",
      "type": "shell",
      "command": "cd frontend && npm test",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },

    // ==========================================
    // FULL STACK TASKS
    // ==========================================
    {
      "label": "🚀 Start Full Stack",
      "dependsOn": ["🚀 Start Backend Server", "⚛️  Start Frontend Dev Server"],
      "dependsOrder": "parallel",
      "problemMatcher": []
    },
    {
      "label": "🧹 Clean All",
      "type": "shell",
      "command": "Get-ChildItem -Path . -Include __pycache__,.pytest_cache,.mypy_cache,.ruff_cache,node_modules,.next,dist,build -Recurse -Force | Remove-Item -Force -Recurse",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "📦 Install Backend Dependencies",
      "type": "shell",
      "command": "cd backend && pip install -r requirements.txt",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "📦 Install Frontend Dependencies",
      "type": "shell",
      "command": "cd frontend && npm install",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "📦 Install All Dependencies",
      "dependsOn": [
        "📦 Install Backend Dependencies",
        "📦 Install Frontend Dependencies"
      ],
      "dependsOrder": "parallel",
      "problemMatcher": []
    },

    // ==========================================
    // DOCKER TASKS
    // ==========================================
    {
      "label": "🐳 Docker: Build All",
      "type": "shell",
      "command": "docker-compose build",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🐳 Docker: Start All Services",
      "type": "shell",
      "command": "docker-compose up -d",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🐳 Docker: Stop All Services",
      "type": "shell",
      "command": "docker-compose down",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🐳 Docker: View Logs",
      "type": "shell",
      "command": "docker-compose logs -f",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "isBackground": true
    }
  ],
  "inputs": [
    {
      "id": "migrationMessage",
      "type": "promptString",
      "description": "Enter migration message:",
      "default": "auto migration"
    }
  ]
}
